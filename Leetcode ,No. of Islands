class Solution {
public:
    void dfs(int row,int col,vector<vector<char>>&grid,vector<vector<int>>&vis){
        vis[row][col]=1;
        int n=grid.size();
        int m=grid[0].size();
        int exploreRow[]={1,0,-1,0};
        int exploreCol[]={0,1,0,-1};
        for(int i=0;i<4;i++){
            int nrow=row+exploreRow[i];
            int ncol=col+exploreCol[i];
            if(nrow>=0 && nrow<n && ncol>=0 && ncol<m && grid[nrow][ncol]=='1' && !vis[nrow][ncol]){
                vis[nrow][ncol]=1;
                dfs(nrow,ncol,grid,vis);
            }
        }
    }
    int numIslands(vector<vector<char>>& grid) {
        int n=grid.size();
        int m=grid[0].size();
        vector<vector<int>>vis(n,vector<int>(m,0));
        int ans=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(!vis[i][j] && grid[i][j]=='1'){
                ans++;
                dfs(i,j,grid,vis);
                }
            }
        }
        return ans;
    }
};
